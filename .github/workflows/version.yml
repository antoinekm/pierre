name: Version and Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to bump to (patch, minor, major, or specific version)'
        required: true
        default: 'patch'

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Update CLI version
        id: version
        run: |
          cd apps/cli
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Use explicit version
            NEW_VERSION="${{ github.event.inputs.version }}"
            npm version $NEW_VERSION --no-git-tag-version
          else
            # Use semver keyword
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
            NEW_VERSION=$(node -p "require('./package.json').version")
          fi
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit changes
        run: |
          git add .
          git commit -m "ðŸ”– release version ${{ steps.version.outputs.new_version }}"

      - name: Create Tag
        run: |
          git tag -a "v${{ steps.version.outputs.new_version }}" -m "Release v${{ steps.version.outputs.new_version }}"
          git push origin "v${{ steps.version.outputs.new_version }}"

      - name: Push changes
        run: git push